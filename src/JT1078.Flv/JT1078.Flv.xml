<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JT1078.Flv</name>
    </assembly>
    <members>
        <member name="T:JT1078.Flv.FlvBufferWriter">
            <summary>
            <see cref="!:System.Buffers.Writer"/>
            </summary>
        </member>
        <member name="F:JT1078.Flv.Enums.FrameType.KeyFrame">
            <summary>
            ‭00010000‬
            </summary>
        </member>
        <member name="F:JT1078.Flv.Enums.FrameType.InterFrame">
            <summary>
            ‭00100000‬
            </summary>
        </member>
        <member name="F:JT1078.Flv.Enums.FrameType.DisposableInterFrame">
            <summary>
            ‭00110000‬
            </summary>
        </member>
        <member name="F:JT1078.Flv.Enums.FrameType.GeneratedKeyFrame">
            <summary>
            01000000
            </summary>
        </member>
        <member name="F:JT1078.Flv.Enums.FrameType.VideoInfoOrCommandFrame">
            <summary>
            01010000
            </summary>
        </member>
        <member name="T:JT1078.Flv.Extensions.HexExtensions">
            <summary>
            
            ref:"www.codeproject.com/tips/447938/high-performance-csharp-byte-array-to-hex-string-t"
            </summary>
        </member>
        <member name="M:JT1078.Flv.Extensions.HexExtensions.ToHexBytes(System.String)">
            <summary>
            16进制字符串转16进制数组
            </summary>
            <param name="hexString"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="F:JT1078.Flv.FlvEncoder.VideoFlvHeaderBuffer">
            <summary>
            Flv固定头部数据
            </summary>
        </member>
        <member name="M:JT1078.Flv.FlvEncoder.CreateFlvFrame(System.Collections.Generic.List{JT1078.Protocol.H264.H264NALU},System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="nALUs"></param>
            <param name="key">由于获取的SIM卡可能为000000000000,所以如果有替换JT1078Package.GetKey()的值</param>
            <param name="minimumLength"></param>
            <returns></returns>
        </member>
        <member name="M:JT1078.Flv.FlvEncoder.CreateFlvFrame(JT1078.Protocol.JT1078Package,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="package">完整的1078包</param>
            <param name="key">由于获取的SIM卡可能为000000000000,所以如果有替换JT1078Package.GetKey()的值</param>
            <param name="minimumLength">默认65535</param>
            <returns></returns>
        </member>
        <member name="M:JT1078.Flv.FlvEncoder.GetFirstFlvFrame(System.String,System.Byte[])">
            <summary>
            
            </summary>
            <param name="key">设备号+通道号(1111111_1)</param>
            <param name="currentBufferFlvFrame">当前接收到的flv数据</param>
            <returns></returns>
        </member>
        <member name="T:JT1078.Flv.FlvFrameInfo">
            <summary>
            flv存储帧信息
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvFrameInfo.PreviousTagSize">
            <summary>
            flv上一帧的数据大小
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvFrameInfo.Timestamp">
            <summary>
            1078当前时间戳
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvFrameInfo.Interval">
            <summary>
            与flv上一帧相减的时间间隔
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvFrameInfo.LastDataType">
            <summary>
            1078数据类型
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvTags.DataSize">
            <summary>
            Tag Data部分大小
            3个字节
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvTags.Timestamp">
            <summary>
            Tag时间戳
            3个字节
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvTags.StreamId">
            <summary>
            stream id 总是0
            3个字节
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvTags.VideoTagsData">
            <summary>
            根据tag类型
            </summary>
        </member>
        <member name="P:JT1078.Flv.FlvTags.DataTagsData">
            <summary>
            根据tag类型
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.Amf3.DataType">
            <summary>
            AMF3数据类型
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.Amf3.Count">
            <summary>
            元素个数
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.Amf3Metadata_VideoCodecId.Value">
            <summary>
            <see cref="!:typeof(JT1078.Flv.Enums.CodecId.AvcVideoPacke)"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:JT1078.Flv.Metadata.AVCDecoderConfigurationRecord" -->
        <member name="P:JT1078.Flv.Metadata.IAmf3Metadata.FieldNameLength">
            <summary>
            字段长度
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.IAmf3Metadata.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.IAmf3Metadata.DataType">
            <summary>
            Amf3数据类型
            ref:video_file_format_spec_v10.pdf scriptdatavalue  type
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.IAmf3Metadata.Value">
            <summary>
            对应的值
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.VideoTags.FrameType">
            <summary>
            高4位
            1: keyframe(for AVC, a seekable frame) —— 即H.264的IDR帧；
            2: inter frame(for AVC, a non- seekable frame) —— H.264的普通I帧；
            </summary>
        </member>
        <member name="P:JT1078.Flv.Metadata.VideoTags.CodecId">
            <summary>
            第四位
            当 CodecID 为 7 时，VideoData 为 AVCVIDEOPACKE，也即 H.264媒体数据
            </summary>
        </member>
    </members>
</doc>
